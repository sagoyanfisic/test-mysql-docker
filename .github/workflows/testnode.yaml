name: Simple Deployment

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy target'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  APP_VERSION: "1.0.0"
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create build script
      run: |
        cat > build.sh << 'EOF'
        #!/bin/bash
        echo "Building for staging..."
        echo "Version: $APP_VERSION"
        echo "Environment: staging"
        echo "Build complete"
        EOF
        chmod +x build.sh

    - name: Run build
      run: ./build.sh

    - name: Deploy to staging
      run: |
        echo "Deploying to staging server..."
        echo "Files uploaded"
        echo "Services restarted"
        echo "Deployment complete: https://staging.myapp.com"

    - name: Health check
      run: |
        echo "Running health check..."
        echo "Status: OK"
        echo "Response time: 120ms"

    - name: Notify Slack
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ Staging deployment successful"
        else
          echo "❌ Staging deployment failed"
        fi

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create production build
      run: |
        echo "Building for production..."
        echo "Optimizations enabled"
        echo "Security checks passed"
        echo "Production build ready"

    - name: Backup current version
      run: |
        echo "Creating backup..."
        echo "Backup saved: backup_$(date +%Y%m%d).tar.gz"

    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        echo "Blue-green deployment started"
        echo "Traffic switched to new version"
        echo "Production updated: https://myapp.com"

    - name: Verify deployment
      run: |
        echo "Verifying production deployment..."
        echo "All checks passed"
        echo "Deployment successful"
