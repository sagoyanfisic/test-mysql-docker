name: EKS Management On/Off Cluster

on:
  repository_dispatch:
    types: [eks-cluster-power]

env:
  user: ${{ github.event.client_payload.userForm }}
  env_target: ${{ github.event.client_payload.environment }}
  action: ${{ github.event.client_payload.actionCluster }}

jobs:
  validate-parameters:
    name: Validate input parameters
    runs-on: ubuntu-24.04
    steps:
      - name: Print input parameters
        run: |
          echo "User: ${{ env.user }}"
          echo "Environment: ${{ env.env_target }}"
          echo "Action: ${{ env.action }}"

  manage-clusters:
    name: Manage Clusters
    needs: validate-parameters
    if: ${{ env.action == 'Encendido' || env.action == 'Apagado' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - env: staging
            clusters: [zeb-backend-staging, zeb-erpnext-staging]
          - env: development
            clusters: [zeb-backend-develop, zeb-erpnext-develop]
    if: ${{ env.env_target == matrix.env }}
    steps:
      - name: Send SNS for each cluster
        uses: nothingalike/sns-publish-topic@v1.6
        with:
          MESSAGE: "${{ join(matrix.clusters, ',') }},us-west-2,${{ env.action == 'Encendido' && 'on' || 'off' }},600"
          TOPIC_ARN: ${{ env.action == 'Encendido' && secrets.RDS_DIRECT_ON_TOPIC_ARN || secrets.SNS_TOPIC_ARN }}
        env:
          AWS_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Wait
        if: ${{ env.action == 'Encendido' }}
        run: sleep 5

      - name: Calculate UTC time + 6 hours
        if: ${{ env.action == 'Encendido' }}
        id: time
        run: |
          FUTURE_TIME=$(date -u -d "+6 hours" +"%Y-%m-%dT%H:%M:%S")
          echo "scheduled_time=$FUTURE_TIME" >> $GITHUB_OUTPUT

      - name: Schedule shutdown for each cluster
        if: ${{ env.action == 'Encendido' }}
        run: |
          for cluster in ${{ join(matrix.clusters, ' ') }}; do
            aws scheduler create-schedule \
              --name "shutdown-${cluster##*-}-${matrix.env}-${{ github.run_id }}" \
              --schedule-expression "at(${{ steps.time.outputs.scheduled_time }})" \
              --flexible-time-window Mode=OFF \
              --target "Arn=${{ secrets.SNS_TOPIC_ARN }},RoleArn=${{ secrets.SCHEDULER_ROLE_ARN }},Input=\"${cluster},us-west-2,off,600\""
          done
        env:
          AWS_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
